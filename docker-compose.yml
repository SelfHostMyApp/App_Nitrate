# Common base configuration that all services inherit
x-basics: &basics
  env_file:
    - .env
  restart: unless-stopped

services:
  web:
    image: "${NS:-quay.io/nitrate}/web:${NITRATE_VERSION:-develop}"
    container_name: nitrate
    <<: *basics

    environment:
      - NITRATE_DB_ENGINE=postgresql
      - NITRATE_DB_HOST=postgres
      - NITRATE_DB_PORT=5432
      - NITRATE_DB_NAME=${NITRATE_DB_NAME}
      - NITRATE_DB_USER=${NITRATE_DB_USER}
      - NITRATE_DB_PASSWORD=${NITRATE_PASSWORD}
      - NITRATE_SECRET_KEY=${NITRATE_SECRET_KEY}
      - NITRATE_MIGRATE_DB=${NITRATE_MIGRATE_DB-1}
      - NITRATE_SET_DEFAULT_PERMS=${NITRATE_SET_DEFAULT_PERMS-1}
      - NITRATE_SUPERUSER_USERNAME=${NITRATE_SUPERUSER_USERNAME-admin}
      - NITRATE_SUPERUSER_PASSWORD=${ROOT_PASSWORD}
      - NITRATE_SUPERUSER_EMAIL=${ROOT_EMAIL}
      - TZ=${TZ}

    volumes:
      - ~/volumes/nitrate/config:/project/nitrate-config
      - ~/volumes/nitrate/uploads:/code/uploads
      - ~/volumes/nitrate/logs:/var/log/httpd

    networks:
      core:
        ipv4_address: 172.20.0.60
      internal:


    depends_on:
      postgres:
        condition: service_healthy
      messagebus:
        condition: service_healthy

    ports:
      - "${NITRATE_PORT}:8080"

    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080" ]
      interval: 30s
      timeout: 15s
      retries: 3
      start_period: 60s

    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.nitrate.rule=Host(`${NITRATE_SUBDOMAIN}.${ROOT_DOMAIN}`)"
      - "traefik.http.routers.nitrate.entrypoints=websecure"
      - "traefik.http.routers.nitrate.middlewares=cloudflare-ipallowlist@file"
      - "traefik.http.routers.nitrate.tls.certresolver=cloudflare"
      - "traefik.http.services.nitrate.loadbalancer.server.port=8080"

  worker:
    image: "${NS:-quay.io/nitrate}/worker:${VERSION:-develop}"
    container_name: testing-worker
    <<: *basics

    environment:
      - NITRATE_DB_ENGINE=postgresql
      - NITRATE_DB_HOST=${POSTGRES_HOST:-postgres}
      - NITRATE_DB_PORT=${POSTGRES_PORT:-5432}
      - NITRATE_DB_NAME=${NITRATE_DB_NAME:-nitrate}
      - NITRATE_DB_USER=${NITRATE_DB_USER:-nitrate}
      - NITRATE_DB_PASSWORD=${NITRATE_PASSWORD}
      - NITRATE_SECRET_KEY=${NITRATE_SECRET_KEY}
      - TZ=${TZ}

    volumes:
      - ~/volumes/nitrate/config:/project/nitrate-config

    networks:
      core:
        ipv4_address: 172.20.0.61
      internal:


    depends_on:
      messagebus:
        condition: service_healthy

  messagebus:
    image: rabbitmq:3.13.4-alpine
    container_name: nitrate-queue
    <<: *basics

    environment:
      - RABBITMQ_DEFAULT_VHOST=myvhost
      - TZ=${TZ}

    networks:
      core:
        ipv4_address: 172.20.0.62
      internal:


    healthcheck:
      test: [ "CMD", "rabbitmq-diagnostics", "-q", "ping" ]
      interval: 30s
      timeout: 15s
      retries: 3
      start_period: 60s

# Run `docker inspect web` to see volume directory on host.

volumes:
  nitrate_db_data:
  nitrate_uploads:
  nitrate_httpd_logs:
